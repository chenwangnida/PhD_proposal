\chapter{Introduction}\label{C:intro}

\section{Problem Statement}
\emph{Service-oriented computing} (SOC) is a novel computing paradigm that employs services as fundamental elements to achieve the agile development of cost-efficient and integrable enterprise applications in heterogeneous environments \cite{papazoglou2003service, papazoglou2006p}. One of the primary purposes of SOC is to overcome conflicts due to diverse platforms and programming languages to make integrable and seamless communication among those existing or newly built independent services. \emph{Service Oriented Architecture} (SOA)  could abstractly realise service-oriented paradigm of computing. This accomplishment has been contributing to reuse of software components, from the concept of functions to units and from units to services during the evolution of development in SOA \cite{booth2004web, overdick2007resource}. One of the most typical implementation of SOA is \emph{web service}, which designated as ``modular, self-describing, self-contained applications that are available on the Internet" \cite{curbera2001web}. Several standards play a significant role in registering, enquiring and grounding web services across the web, such as UDDI \cite{curbera2002unraveling}, WSDL \cite{lausen2007semantic} and SOAP \cite{fensel2011semantic}. \emph{Web service composition} aims to loosely couple a set of web services to provide a value-added composite service that accommodates complex functional and non-functional requirements of service users. 

Two most notable challenges for web service composition are ensuring interoperability of services and achieving Quality of Service (QoS) optimisation \cite{fensel2011semantic}. \emph{Interoperability} of web services presents challenges in syntactic and semantic dimensions. The syntactic dimension is covered by the XML-based technologies \cite{yu2008deploying}, such as the previously discussed $WSDL$ and $SOAP$. In this dimension, most of service compositions are merely based on the matching of input-output parameters. The semantic dimension enables a better collaboration through ontology-based semantics \cite{o2005review}, in which many standards have been established. E.g., OWL-S \cite{martin2004owl}, Web Service Modeling Ontology (WSMO) \cite{lausen2005w3c}, SAWSDL \cite{kopecky2007sawsdl}, Semantic Web Services Ontology (SWSO) \cite{petrie2016web}. This dimension bring around some other underlying functionality of services (i.e., precondition and postcondition) that could effect the execution of web services and their composition. This challenge give birth to \emph{Semantic web services composition}. Semantic web services composition is distinguished from the traditional service composition (i.e., only syntactic dimension is presented in web services). For semantic web service composition,  the resources of which are described semantically to enable a better interoperability for composing services. Another challenge is related to QoS optimisation, e.g., a search for minimum cost and maximum reliability. This problem gives birth to \emph{QoS-aware service composition} that aims to find composition solutions with optimised QoS. Furthermore, this composition problem is extended with \emph{Service Level Agreement (SLA)} \cite{sahai2002automated}, i.e., binding constraints on QoS. This extended problem is called \emph{SLA-aware web service composition}, e.g., both lower and upper bound as constraints on cost, execution time, availability and reliability are separately specified.



Apart from the two notable challenges discussed above, the environment of service composition is changing in the real world, rather than \emph{static}. E.g, QoS values of services being composed of are fluctuating over time, or service chosen at the planning stage may not available to be invoked at the runtime. Most of importance is \emph{static web service composition} supports the environment change badly because of outdated composition solutions. Therefore, \emph{Dynamic web service composition} become a very demanding research field with a growing interest for providing solutions that adapt to the changing environment. Particularly, some mechanisms are required to be developed to automatically detect the changes or recover from the faults \cite{chan2009fault}. Additionally, in context of semantic web service composition, semantics of web services can make the problem of dynamic web service composition more complicated for the changing ontology.


Different approaches have been proposed to solve those composition problems discussed above and they can be classified into two main categories: \emph{semi-automated web service composition} and \emph{fully automated web service composition}. The first composition problem requires human beings to manually create abstract workflows. Generally, researchers assume the pre-defined abstract workflow is given and provided by the users. The optimisation problem in this approach turns to selecting the concrete services with the best possible quality to each abstract service slot in the given workflow. Due to a tremendous growth in industries and enterprise applications, the number of web services has increased dramatically and unprecedentedly. The process of conducting abstract workflows  manually is fraught with difficulties. Therefore, fully automation of the composition process was introduced in web service composition for less human intervention, less time consumption, and high productivity. The advantages of fully automated approach is that an abstract workflow is not not provided, but generated while service are being selected. 


Generating composition plans automatically in discovering and selecting suitable web services is a NP-hard problem \cite{moghaddam2014service}, which means the composition solution is not likely to be found with reasonable computation times in a large searching space. \emph{Artificial Intelligence (AI) planning-based approaches}, \emph{Evolutionary Computation (EC) techniques} and hybrid techniques  are introduced to handle this problem. AI planning problem is utilised to solve automated web service composition problems as a plan making process, from initial states to a set of actions to desired goal states-composite web services, where services are considered as actions triggered by one state (i.e., inputs) and resulted in another state (i.e., outputs). In the second approach, heuristics have been employed to generate near-optimal solutions, where a variety of EC techniques have been used in this context, e.g., Genetic Algorithms (GA), Genetic Programming (GP) and Particle Swarm Optimisation (PSO). EC-based techniques have been effectively proposed to solve \emph{QoS-aware web service composition} problems with different designed data structures for representation. That is, different solution representation utilised in different EC-based method have been investigated in QoS-aware web service composition problems, since they could significantly impact on the performance while performing fully automated service composition. In the third approach, a hybrid of AI planning-based approaches and EC-based approaches \cite{da2016genetic,ma2015hybrid} are proposed to fulfil the correctness in constructing workflows with users' constraints, while the quality of composition solutions (e.g., QoS) are also optimised according to users' requirement. From the literature, hybrid approaches generally outperform single independent methods for finding more optimal solutions in the domain of automated QoS-aware web service composition. It becomes a very promising approach to investigate. Meanwhile, a few previously addressed problems in hybridisation of quality of semantic matchmaking and QoS, dynamic service composition have not been fully explored in the past.

The overall goal of this thesis is to propose hybrid approaches to comprehensive-quality aware automated web service composition. This comprehensive quality aims to jointly optimise semantic matchmaking quality and QoS. Meanwhile, this new approach also tackles several service composition problems, such as semantic web service composition, multi-objective optimisation, dynamic web service composition.

\section{Motivations}
The motivations of automated semantic web service composition lies in the requirements from three key aspects that simultaneously account for. 
\begin{enumerate*}
 \item \emph{Various techniques of hybridisation}.
 \item \emph{Quality of service composition}.
%previous studies have suggested many approaches to optimise QoS, which refers to the non-functional quality of service composition. However, the importance of the functional quality (i.e, semantic matchmaking quality) are not recognised in these works.
 \item \emph{Single-objective and Muti-objective optimisation}.
 \item \emph{Service composition based on preconditions and effects}.
 \item \emph{dynamic semantic service composition}.
\end{enumerate*}
Herein these requirements are explicitly discussed below. 
\subsubsection{Various Techniques of Hybridisation}

Various techniques are utilised to solve service composition problems, such as AI planning, local searching and EC-based techniques. AI planning is a prominent technique for handling web service composition problems while ensuring the correctness of the solution (i.e., all the inputs of involved services are satisfied) at every step \cite{wang2014automated}.  Local search is a exhaustive search technique for solving optimisation problems. In local search, solutions keep moving to the neighbour solutions with one locally maximised criterion until near-optimal solution found \cite{parejo2008qos}. However, this technique has the shortage in handling global optimisation.  On the other hand, EC-based techniques are outstanding at solving combinatorial optimisation problems for finding the globally optimised solutions in large searching space. To take the benefits from various techniques,  various techniques of hybridisation allows escaping local optimal easily and improving the rate of convergence rate \cite{renders1996hybrid}.

Traditionally, various techniques are employed to handle service composition problem independently in existing works. Many researchers investigated AI planning techniques for service composition problems using classical planning algorithm, where inputs, outputs, preconditions and effects are well defined along with the actions (i.e, services) \cite{markou2015non,peer2005web}. On the one hand, AI planning ensures both the correctness of functionality and satisfactory of constrains, but it is always considered to be less efficient and less scalable, leaving aside optimisation problems \cite{parejo2008qos}. On the other hand, some researchers combine AI planning and local search to handle optimisation problems, e.g., a combination of Graphplan \cite{blum1997fast} and Dijkstra’s algorithm is proposed by \cite{feng2013dynamic} to achieve a correct solution with optimised QoS. On the other hand, many EC techniques have been utilised to handle service composition problems for global optimal solutions. A few researchers also combine both local search and EC-based techniques for efficiently finding composition solution with optimised QoS \cite{parejo2008qos}. From the techniques discussed above, these techniques are problem-specific, e.g., optimising QoS or number of services. To cope the composition problems featured in all the motivations discussed below, new hybrid methods must be proposed to adapt in the problems specified in the thesis, e.g., a hybrid method for automatically optimising both semantic matchmaking quality and QoS. 

\subsubsection{Hybridisation of Quality of Semantic Matchmaking and Quality of Service}
Web service compositions are optimised and ranked on the well known non-functional attributes (i.e, QoS), when services are composed together based on outputs provided by one service and inputs required by another service. In the domain of semantic web services, Often, the provided information (i.e., outputs) does not perfectly match the required information (i.e., inputs) according to the semantic descriptions are abided with by these information \cite{lecue2008optimizing}. The quality of the matches are one part of the goal for achieving service compositions \cite{lecue2009optimizing}. Therefore, a hybridisation of QoS and semantic matchmaking quality becomes a combinatorial optimisation problem in web service composition. One motivated example from the practical perspective is explained here: Often, many different service compositions can meet a user request but differ significantly in terms of QoS and semantic matchmaking quality. For example, in the classical travel planning context, some component service must be employed to obtain a travel map. Suppose that two services can be considered for this purpose. One service $S$ can provide a street map at a price of 6.72. The other service $S'$ can provide a tourist map at a price of 16.87. Because in our context a tourist map is more desirable than a street map, $S'$ clearly enjoys better semantic matchmaking quality than $S$ but will have negative impact on the QoS of the service composition (i.e., the price is much higher). One can easily imagine that similar challenges frequently occur when looking for service compositions. Hence, a good balance between QoS and semantic matchmaking quality is called for.

Existing works on service composition focus mainly on addressing only one quality aspect discussed above. For the semantic matchmaking quality, it is mainly addressed in the discovery of an atomic service, i.e., one-to-one matching of user requirements to a single service. The service composition \cite{bansal2016generalized,boustil2014semantic,mier2015integrated} utilised semantic descriptions of web services (e.g., description logic) to ensure the interoperability of web services, but the goal of the composition is often to minimise the number of services or the size of a graph representation for a web service composition. These approaches do not guarantee an optimised QoS of service compositions. On the other hand, huge efforts have been devoted to studying QoS-aware web service composition \cite{gupta2015optimization,ma2015hybrid,qi2010combining,da2016particle,da2015graphevol,yu2013adaptive}, and some approaches to QoS-aware web service composition do consider the semantic matchmaking while composing solutions, but they do not recognise the importance of semantic matchmaking quality for optimising and ranking service composition. For these reasons, there is a need to device an comprehensive quality model for jointly optimising the two quality aspects. Apart from that, new representations need to be proposed to maintain the required information for the optimisation of the two quality aspects using hybrid methods.


\subsubsection{Multi-Objective Composition Optimisation}
Web service composition problems fall into two groups, depending on an optimisation for a single objective or multiple objectives. In single-objective service compositions, a single composition solution is always returned by the composition task, when the preferences of each quality component within the single objective (e.g., a weighted sum of different quality criteria) is known by users. However, users do not always have clear preferences when many quality criteria are presented. Therefore, multi-objective is a natural features of requirements from users to provide a set of trade-off solutions for the conflicting quality criteria. E.g., Premium users do not care cost as much as price-sensitive users do, so they may prefer a composition solution with lowest execution time,  rather than one with a relatively lower execution time without exceeding a budget. Therefore, a multi-objective  fully automated service composition approach is very demanding for providing a set of solutions.

Existing research on the automated web service composition mainly concentrates on single objective problems for QoS-aware web service compositions. I.e., there is only one solution promoted by a unified QoS ranking score to all the users. However, in multi-objective context, service composition problems  \cite{liu2005dynamic,wada2012e3,yao2009qos,yin2014hybrid} are only approached by semi-automated methods, where the workflow structure is assumed to be pre-existing, despite these approaches handle the conflicting QoS attributes independently. Meanwhile, constraints on SLA are also employed to some of these approaches to reach the solutions with desirable level, and they raised the complexity of absolute Preto priority relation \cite{garey1979guide}. From above discussion, these is a lack of fully automated approaches to multi-objective web service composition problems for SLA-aware web service composition. Moreover, the insufficiency of handling only non-functional attributes (i.e., QoS) has given rise to adding semantic matchmaking quality into consideration.

\subsubsection{Automated Web Service Composition Based on Preconditions and Effects}
Apart from considering the satisfactory inputs and production of outputs, some conditional constraints also determine the execution of services.  These conditional constraints lead to multiple possible paths for execution when services are composed together. E.g., In the scenario of an online book shopping system adapted from \cite{wang2014automated}, services are composed to provide an operation for book shopping.  Users expect purchasing outcome (e.g. receipt) returned If book and customer details (e.g. title, author, customer id) are given. In this case, the users may have specific constraints. If the customer has enough money to pay for the book in full amount, then they would like to do so. Otherwise, the customer would like to pay by instalments. Therefore, the constraints are on their current account balance needs to be handled during the execution of the service composition.

Most of the approaches to automated web service composition are approached through services represented by only inputs and outputs, which are simply utilised to complete service composition. However, the underlying functional knowledge of services (i.e., prerequisites for execution, and result in some changes, often know as precondition and effects) is not included \cite{paliwal2012semantics}. On the one hand, many promising approaches \cite{DBLP:journals/soca/BoustilMS14} been explored to achieve compositions that consider precondition and effects using AI planning, since AI planning ensures both the correctness of functionality and satisfactory of constrains. Exhaustive methods are utilised with AI planning for optimisation problem in web service composition based on preconditions and effects. These methods always present less efficiency, poor scalability, and intensive computation. On the other hand, EC techniques (i.e., heuristic methods) are considered to be more flexible and more efficient. Given the benefits from both AI planning and EC-based techniques, they are motivated to be fully explored for automated web service composition based on precondition and effects.

\subsubsection{Dynamic Semantic Web Service Composition}
In a  dynamic environment, QoS of the atomic services in service repository is a moving target. Static service composition solution is no longer enough, and requisite measures must be taken if the original composition solution may change in QoS or not be executable if any service involved goes offline. Therefore, dynamic Web service composition is proposed to effectively and efficiently monitor and update composition solutions when they are outdated \cite{li2014fault}. 


The major techniques endeavoured to update outdated or incorrect compositions allow for dynamic adaptation of the solutions based on implementing variability constructs at the language level. This approach is difficult to manage, and error-prone.  Based on which, variability model \cite{alferez2014dynamic} is proposed to support the adaption. However, most of the EC-based approaches to web service composition have been studied in static scenarios, rather than dynamic ones. Although a lack of research in this field, they have been showing its confidence of its behaviour for handling dynamic web service composition for two reasons: a proper amount of population stored could be used for retrieving an alternative composition solution in the case of failure. Also, The stored population could be further evolved while taking changes of QoS into account. This self-heal process supports the adaption of a dynamic environment. Presented those benefits, it is advisable to study the effectiveness of EC approaches in a dynamic composition context.

 
\section{Research Goals}
The overall goal of this thesis is to develop new and effective hybrid approaches to comprehensive quality-aware automated semantic web service composition. More specifically, the focus will be on developing hybrid approaches that could explicitly support a proposed comprehensive quality for jointly optimising QoS and semantic matchmaking quality, developing multi-objective approach for optimising the quality criteria that involved in the decision making of composition solutions selection, developing approaches for semantic web service composition, particularly, considering precondition and effects, and developing hybrid composition techniques to dynamic service composition for handling changes of composition environment. This research aim to develop a hybridisation of AI planning and EC-based composition techniques for effectively handling the several service composition problems discussed above. The research goal described above can be achieved by completing the following set of objectives:


\begin{enumerate}
  \item \textbf{Hybrid approaches to comprehensive quality-aware automated web service composition that simultaneously optimises both QoS and semantic matchmaking quality}. Particularly, we extend existing works on QoS-aware service composition by considering jointly optimising the both quality aspects, which is proposed as a comprehensive quality model. On the other hand, representations of the composition solutions are the key aspect of the approaches, and they must maintain all the required information for the evaluation. Therefore, we will investigate the following sub-objectives to handle this objective.
  \begin{enumerate}
    \item \emph{Propose a comprehensive quality model that addresses QoS and semantic matchmaking quality simultaneously with a desirable balance on both sides.} We aim to establish a quality model with a simple calculation and good performance for the evaluation of our proposed comprehensive quality. Meanwhile, to enable a better evaluation on our approaches, it must support most of existing benchmark datasets, e.g., Web Service Challenge 2009 (WSC09)\cite{kona2009wsc} and OWLS-TC \cite{kuster2008opossum}.
    
    \item \emph{Propose direct and indirect solution representations for comprehensive quality-aware web service composition.} Graph-based and tree-based representations are widely used for directly representing service composition solutions. Graph-based representations are capable of presenting all the semantic matchmaking relationships as edges, but hardly presenting some composition constructs (e.g. loop and choice). Tree-based representations could be more ideal for practical use, since they can present all composition constructs as inner nodes of trees. However, they could hardly maintain all the edge-related relationships supported by graphs. To take advantage of the benefits from both graph-based and tree-based representations, we aim to propose a tree-like representation representation. The \emph{indirect representations} do not present the final service composition solutions, they must be decode to executable service composition. Previous studies have shown their better performances in searching optimal solution for QoS-aware web service composition \cite{da2016memetic,da2016particle}. However, the decoding process could increase the computation time. Apart from that, the indirect representation potentially increases the searching space, due to the changes of the indirect representation may result in the same solutions. To overcome these disadvantages, it is advisable to propose more efficient indirect representations.
    
    \item \emph{Propose hybrid methods to effectively and efficiently handle the problem for comprehensive quality-aware automated web service composition.} The reasons of utilising hybrid techniques are briefly discussed in the first motivation. Herein, hybrid approaches are suggested to be developed for supporting both the proposed indirect and indirect representations, as well as the comprehensive quality model. In particularly, hybrid heuristics strategies are combined to provide fast convergence of fitness value and avoid being trapped by the local optimal.
  \end{enumerate}
 
 \item \textbf{Develop multi-objective approaches to optimising the comprehensive quality of service composition}. In practice, many quality criteria proposed in our comprehensive quality are often simultaneously desired and normally conflicting. Existing works \cite{liu2005dynamic,zhang2010qos,yu2013efficient,yin2014hybrid,xiang2014qos,chen2014partial} mainly concentrate on semi-automated QoS-aware web service composition. Therefore, a study needs to be carried out for not only a better understanding the trade-offs between different objectives (e.g., quality of semantic matchmaking and QoS are naturally considered as two conflicting objectives), but also a good investigation on fully automated approaches utilising those algorithms (e.g, NSGA-II \cite{deb2002fast}, SPEA2 \cite{zitzler2001spea2} and MOEA/D \cite{zhang2007moea}). These algorithms are needed for finding a Pareto front of evolved solutions that satisfies users' interests. Meanwhile, different representations may not perform equally effective, so a study on the performances comparison of different representations with different fully automated approaches also arouses researchers' interest. Apart from that, SLA consideration needs to be taken into account, as well as customised matchmaking levels that needs to be proposed to bring the flexibility in meeting different requirements of segmented users. The development of this approach can be divided into the following two sub-objectives:
   \begin{enumerate}
   
    \item \emph{Develop a fundamental EC-based approaches to multi-objective fully automated comprehensive quality semantic web service composition}. 
    
    Here we develop a  fundamental muti-objective optimisation approach using some multi-objective EC-based algorithm. (e.g, NSGA-II \cite{deb2002fast}, SPEA2 \cite{zitzler2001spea2} and MOEA/D \cite{zhang2007moea}), where different representations and modified multi-objective EC algorithms are simultaneously taken into account for studying both their effectiveness and efficiency. This sub-objective is also established for mainly studying each independent quality criteria from our proposed comprehensive quality model in Objective 1.  In particular, both quality of semantic matchmaking and QoS must be optimised independently, since they may represent conflicting interests. It would be interesting to examine different tradeoffs among the service composition solutions with respect to the different quality criterion. Apart from that,  fully automated approaches are also developed to overcome the limitation (i.e., semi-automated approaches) in existing works discussed above.
   
    \item \emph{Develop hybrid approaches to multi-objective fully automated comprehensive quality semantic web service composition}. Since we have achieved the sub-objective 1,  the effectiveness and efficiency are the next focus. The fundamental approaches should be extended by introducing some local search.  In particular, some efforts could be made for simultaneously considering some improvements on representations themselves,  some combinations with a fast local search. For example, an exhaustive search for the neighbourhood of best the individual within the current population is performed with a relatively higher priority.


    \item \emph{Develop hybrid approaches to multi-objective fully automated comprehensive quality semantic web service composition abiding by constraints on SLA and customised matchmaking level}. In the real world scenario, satisfactory on given SLA constraints are required to be meet users' needs other than optimising QoS. Therefore, this sub-objective should be further extended to considering some additional constraints on  QoS (i.e., multilevel constraints with lower and upper bound for different QoS individual criterion \cite{yin2014hybrid}). Meanwhile, to satisfy the customised different semantic matchmaking levels (e.g., exact matchmaking level and less strict matchmaking level), methods are also required to copy the constraints on the different accepted matchmaking level.

   \end{enumerate}
  
 \item \textbf{Develop hybrid techniques to handle dynamic semantic web service composition effectively}. The objectives one and two are proposed assuming the environment of service composition is static. In this scenario, environments refer to the availability of registered services and their QoS attributes remain constant, as well as the ontology utilised for describing the resources of web services. Apart from that,  the proposed hybrid approaches are executed only once for a given composition task. However, QoS values of services being composed of are fluctuating over time, service chosen at the planning stage may not available to be invoked at the runtime, or newly registered service may need to be considered for reconstructing a plan. To effectively handle these changes, two studies are performed as two sub-objectives as follows:

  \begin{enumerate}
 \item \emph{Develop fundamental techniques to re-optimise solution candidates for changes in QoS and Ontology.} Traditionally, initial population is created with solution candidates that are further evolved for searching optimal solutions. During the evolutionary computation process, most of service candidates are discarded excluding the best service candidate found. Those discarded solutions candidates may be promising, since some of them could turn to be alternative best due to the changes in QoS or quality of semantic matchmaking. Therefore, instead of discarding the solution candidates, it would be very motivated to keep the discard solution candidates where both diversity and elitism are preserved, and an effective approach must be proposed to re-optimise these maintained candidates for further use. For example, 
% To take QoS changes into account, the denote a set of possibility QoS 

 \item \emph{Develop hybrid techniques to re-optimise solution candidates for changes in QoS and Ontology.} Traditionally, initial population is created with solution candidates that are further evolved for searching optimal solutions. During the evolutionary computation process, most of service candidates are discarded excluding the best service candidate found. Those discarded solutions candidates may be promising, since some of them could turn to be alternative best due to the changes in QoS or quality of semantic matchmaking. Therefore, instead of discarding the solution candidates, it would be very motivated to keep the discard solution candidates where both diversity and elitism are preserved, and an effective approach must be proposed to re-optimise these maintained candidates for further use.


 
 
 \item \emph{Develop mechanisms for handling service failure and newly registration using updated candidates in the population.} Apart from the changes in the QoS and Ontology. A dynamic web service composition also tackle the issue of occasionally service fail or new registration. For the case of service fail, some methods must be proposed to either handle those uninvokable services for replacement, e.g., we could either efficiently mutate the solutions candidates partially on uninvokable services only or effectively re-generate solution candidates using invokable service in the service repository. For the case of new service registration, giving a priority for newly registered services initially should be properly considered for selecting services.
 
% In addition to quality changes, the atomic services used in a composition may occasionally fail/become unavailable. An alternative execution plan must be used to prevent the composite service from being impacted, and the proposed solution is to select as efficiently as possible an unaffected candidate from the population as the replacement.
 \end{enumerate}
 
 
 
 
 \item \textbf{Develop hybrid approaches to semantic web service compositions based on preconditions and effects. (Optional)} Particularly, we extend most service composition approaches (i.e., satisfactory on inputs and outputs) to include preconditions and effects. These conditional constrains also raise the study of various of composition constructs, e.g., loop and choice. Therefore, two sub-objectives are proposed to target as follow.
 \begin{enumerate}
 
  \item \emph{Develop hybrid techniques to semantic web service composition based on preconditions and effects}. We will investigate the web service  composition problem on establishing a fundamental mechanism of satisfactory on preconditions and effects. These extra constrains on service composition will be considered in a proposed hybrid approaches.
  
    
   \item \emph{Develop hybrid techniques to semantic web service composition based on preconditions and effects for supporting loops and choice}. Extend the fundamental mechanism of satisfactory on preconditions and effects to include loops and choice. To cope these two constructs, effective representations are required to be studied. hybrid approaches are aimed to proposed to efficiently solving fully automated comprehensive quality-aware service composition problem.

 
 \end{enumerate}
 
\end{enumerate}

\section{Published Papers}

During the initial stage of this research, The preliminary work was carried out on establishing the comprehensive quality model.  Afterwards, some studying on the direct and indirect representations for the first objective of this research. Although the earlier works focus on static web service composition using single-objective optimisation, the results show indirect representation shows its promise in solving our service composition problem.  The following is the publication made from the preliminary studies:

\begin{itemize}
 \item Wang, C., Ma, H., Chen, A., Hartmann, S.: Comprehensive quality-aware automated semantic web service composition. In: Australasian Joint Conference on Artificial Intelligence (To appear)
\end{itemize}


\section{Organisation of Proposal}The remainder of the proposal is organised as follows: Chapter \ref{C:review} provides a fundamental definition of the web service composition problem and performs a literature review covering a range of works in this field; Chapter \ref{C:preliminary} discusses the preliminary work explores direct and indirect representations for comprehensive quality-aware semantic web service composition using the hybridisation of AI planning techniques and EC-based techniques; Chapter \ref{C:plan} presents a plan detailing this project's intended contributions, a project timeline, and a thesis outline.
